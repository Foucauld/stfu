Projet informatique : cahier des charges

Foucauld Bouvattier, Guillaume Hallermeyer, Edouard Paris, Hugo Durchon

18 Avril 2014


1 Introduction 3
2 Choix techniques 3
2.1 Le choix des langages . . . . . . . . . . . . . . . . . . . . . . . . . 3
2.2 La d ́efinition des tˆ 3
  aches . . . . . . . . . . . . . . . . . . . . . . . 
3 R ́ 5
 epartition des tˆ 
  aches 

1 Introduction

L’objectif du projet informatique est d’impl ́ementer un  ́editeur de texte collab-
oratif. Ainsi, le logiciel devra permettre de cr ́eer, d’ ́editer et d’enregistrer un
document texte de fa ̧con partag ́ee.
Nous avons choisi de coder une application synchrone car nous pr ́ef ́erons la
gestion des conflits par r ́eservation des modifications d’une partie du texte, par
exemple, `
a l’aide de s ́emaphores. Par ailleurs, une interface commune et la possi-
bilit ́e de modification en temps r ́eel du document texte nous convient davantage
.

2

2.1 Choix techniques

Le choix des langages
La majeur partie de notre projet informatique se fera en langage C par soucis
de connaissance et de maitrise des autres langages concernant tout ce qui touche
aux r ́eseaux et serveurs ainsi que par soucis de compatibilit ́e entre les diff ́erentes
parties.

Nous seront  ́eventuellement amen ́e `a utiliser d’autres langages tel que le C++
notamment pour disposer des biblioth`eques d’affichage pour l’interface si celle
propos ́ee par le langae C ne suffisent pas.

2.2 La d́efinition des taches

Gestion du Serveur

Cette partie a pour but la cr ́eation d’un serveur TCP ainsi que la gestion
client. Puis nous nous interesseront `a la relation fichier / serveur, `a savoir le
stockage des fichiers, connection au serveurs.
Dans le cadre d’une application synchrone, nous estimons que l’environnement
client serveur propos ́e par le protocole TCP est la plus adapt ́ee. En effet, les
clients et le serveur pourront communiquer en mode connect ́e et les utilisa-
teurs pourront modifier le document texte en mˆeme temps en se connectant au
serveur.

En outre, le document texte sera stock ́e sur le serveur. L”enregistrement se fera
tr`es r ́eguli`erement afin de communiquer en temps r ́eels `a tous les utilisateurs les
modifications effectu ́ees sur le document texte.

Communications entre les clients

La communication entre les clients sera g ́er ́ee par le protocole TCP. Il per-
mettra de communiquer efficacement et de mani`ere sˆ
ure par encapsulation les

donn ́ees entre le serveur et les clients, et donc les clients entre eux.
La communication entre les clients devra rester coh ́erente. Ainsi, une synchro-
nisation instantan ́ee sera mise en place afin de limiter les modifications d ́ecal ́ees
dans le temps chez tous les utilisateurs.
En cas de probl`eme dans l’impl ́ementation de ce syst`eme, une interface ”syn-
chronisation en cours” pourra ˆetre mise en place afin d’attendre que tous les
clients re ̧coivent les modifications au mˆeme moment.

L’ ́editeur de texte

l’ ́editeur de texte permettra d’ouvrir ou cr ́
eer un fichier, le modifier en
 ́ecrivant des caract`eres `
a l’endroit ou le curseur est positionn ́e (le curseur corre-
spond `
a une ligne, un caract`ere sur cette ligne et une page). L’utilisateur aura
juste `
a ouvrir un fichier et `
a taper (suivi de ”enter”) pour que le texte soit  ́ecrit
4dans le fichier.

L’ ́editeur est fait en langage C pour pouvoir utiliser efficacement des tableau et
des scanf pour r ́ecup ́erer ce que l’utilisateur  ́ecrit.

L’affichage et l’interface graphique

L’affichage a pour objectif de montrer en temps r ́
eel l’ ́etat du document et
la position des curseurs des utilisateurs. Dans un premier temps l’affichage sera
sous la forme d’une console. Dans un second temps, une fois la version basique
de l’application obtenue, nous envisagerons d’am ́eliorer l’affichage par une in-
terface graphique. Nous utiliserons pour cela une biblioth`
eque graphique
pour le langage C, sous licence libre.
Pour r ́ealiser cet affichage, un travail conjoint avec le d ́eveloppement de l’ ́editeur
de texte est n ́ecessaire. Des choix `a propos de la mise en page auront `a la fois
un impact pour l’affichage mais aussi pour l’ ́edition du document.

3 Ŕepartition des tˆaches

Guillaume Hallermeyer s’occupera de la partie gestion du serveur. Hugo Dur-
chon s’occupera de la partie communication entre les clients. Foucauld Bouvat-
tier s’occupera de la partie  ́editeur de texte. Edouard Paris s’occupera de la
partie affichage et interface graphique.

Tous les  ́etudiants conservent cependant la responsabilit ́e commune sur l’ensemble
du projet. Si un des  ́etudiants a fini sa partie en avance, il aidera les autres dans
leurs parties.

Une mise en commun et une synth`ese du travail effectu ́e aura lieu avant
le rendu final.

Pour am ́eliorer notre organisation, nous utilisons GitHub afin de centraliser
toutes les fichiers et un Makefile sera cod ́e d`es le d ́ebut du projet et sera mis `a
jour progressivement.
